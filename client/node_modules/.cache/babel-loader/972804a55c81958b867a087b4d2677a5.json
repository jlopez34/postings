{"ast":null,"code":"import _defineProperty from \"/home/momo/Documentos/segware/react/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/momo/Documentos/segware/react/client/src/post/PostEdit.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Container, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport AppNavbar from \"../AppNavbar\";\n\nclass PostEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      title: '',\n      comments: '',\n      likes: 0,\n      unlikes: 0\n    };\n    this.state = {\n      item: this.emptyItem\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      const post = await (await fetch(\"/postings/\".concat(this.props.match.params.id))).json();\n      this.setState({\n        item: post\n      });\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const title = target.name;\n\n    let item = _objectSpread({}, this.state.item);\n\n    item[title] = value;\n    console.log(item);\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const item = this.state.item;\n    await fetch('/postings/', {\n      method: item.id ? 'PUT' : 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    this.props.history.push('/postings/');\n  }\n\n  render() {\n    const item = this.state.item;\n    const title = React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, item.id ? 'Edit Post' : 'Add Post');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, title, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      value: item.title || '',\n      onChange: this.handleChange,\n      autoComplete: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(Input, {\n      type: \"textarea\",\n      name: \"comments\",\n      id: \"comments\",\n      value: item.comments || '',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      colar: \"secondary\",\n      tag: Link,\n      to: \"/postings/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default withRouter(PostEdit);","map":{"version":3,"sources":["/home/momo/Documentos/segware/react/client/src/post/PostEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","AppNavbar","PostEdit","constructor","props","emptyItem","title","comments","likes","unlikes","state","item","handleChange","bind","handleSubmit","componentDidMount","match","params","id","post","fetch","json","setState","event","target","value","name","console","log","preventDefault","method","headers","body","JSON","stringify","history","push","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,SAAlC,EAA6CC,KAA7C,EAAoDC,KAApD,QAAiE,YAAjE;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,QAAN,SAAuBV,SAAvB,CAAgC;AAQ5BW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAPlBC,SAOkB,GAPR;AACNC,MAAAA,KAAK,EAAC,EADA;AAENC,MAAAA,QAAQ,EAAC,EAFH;AAGNC,MAAAA,KAAK,EAAC,CAHA;AAINC,MAAAA,OAAO,EAAC;AAJF,KAOQ;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KAAKN;AADF,KAAb;AAGA,SAAKO,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAED,QAAME,iBAAN,GAAyB;AACrB,QAAG,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,KAA+B,KAAlC,EAAwC;AACpC,YAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,qBAAc,KAAKhB,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,EAAtC,EAAZ,EAAyDG,IAAzD,EAAnB;AACA,WAAKC,QAAL,CAAc;AAAEX,QAAAA,IAAI,EAAEQ;AAAR,OAAd;AACH;AACJ;;AAEDP,EAAAA,YAAY,CAACW,KAAD,EAAO;AACf,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMnB,KAAK,GAAGkB,MAAM,CAACE,IAArB;;AACA,QAAIf,IAAI,qBAAO,KAAKD,KAAL,CAAWC,IAAlB,CAAR;;AACAA,IAAAA,IAAI,CAACL,KAAD,CAAJ,GAAcmB,KAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,SAAKW,QAAL,CAAc;AAACX,MAAAA;AAAD,KAAd;AACH;;AAED,QAAMG,YAAN,CAAmBS,KAAnB,EAAyB;AACrBA,IAAAA,KAAK,CAACM,cAAN;AADqB,UAEdlB,IAFc,GAEN,KAAKD,KAFC,CAEdC,IAFc;AAIrB,UAAMS,KAAK,CAAC,YAAD,EAAe;AACtBU,MAAAA,MAAM,EAAGnB,IAAI,CAACO,EAAN,GAAY,KAAZ,GAAkB,MADJ;AAEtBa,MAAAA,OAAO,EAAC;AACJ,kBAAU,kBADN;AAEJ,wBAAgB;AAFZ,OAFc;AAMtBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevB,IAAf;AANgB,KAAf,CAAX;AAQA,SAAKP,KAAL,CAAW+B,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAAA,UACG1B,IADH,GACW,KAAKD,KADhB,CACGC,IADH;AAEJ,UAAML,KAAK,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKK,IAAI,CAACO,EAAL,GAAS,WAAT,GAAqB,UAA1B,CAAf;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,EAEH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,KADL,EAEI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKQ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,EAAE,EAAC,OAAnC;AAA2C,MAAA,KAAK,EAAEH,IAAI,CAACL,KAAL,IAAc,EAAhE;AAAoE,MAAA,QAAQ,EAAE,KAAKM,YAAnF;AAAiG,MAAA,YAAY,EAAC,OAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,EAAE,EAAC,UAA1C;AAAqD,MAAA,KAAK,EAAED,IAAI,CAACJ,QAAL,IAAiB,EAA7E;AAAiF,MAAA,QAAQ,EAAE,KAAKK,YAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,EASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,GAAG,EAAEnB,IAA/B;AAAqC,MAAA,EAAE,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CATJ,CAFJ,CAFG,CAAP;AAoBH;;AAzE2B;;AA4EhC,eAAeC,UAAU,CAACQ,QAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Container, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport AppNavbar from \"../AppNavbar\";\n\nclass PostEdit extends Component{\n    emptyItem={\n        title:'',\n        comments:'',\n        likes:0,\n        unlikes:0\n    };\n\n    constructor(props){\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount(){\n        if(this.props.match.params.id !== 'new'){\n            const post = await (await fetch(`/postings/${this.props.match.params.id}`)).json();\n            this.setState({ item: post});\n        }\n    }\n\n    handleChange(event){\n        const target = event.target;\n        const value = target.value;\n        const title = target.name;\n        let item = {...this.state.item};\n        item[title] = value;\n        console.log(item);\n        this.setState({item});\n    }\n\n    async handleSubmit(event){\n        event.preventDefault();\n        const {item} = this.state;\n\n        await fetch('/postings/', {\n            method: (item.id) ? 'PUT':'POST',\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item)\n        });\n        this.props.history.push('/postings/');\n    }\n\n    render(){\n        const {item} = this.state;\n        const title =  <h2>{item.id? 'Edit Post':'Add Post'}</h2>\n\n        return <div>\n            <AppNavbar />\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"title\">Title</Label>\n                        <Input type=\"text\" name=\"title\" id=\"title\" value={item.title || ''} onChange={this.handleChange} autoComplete=\"title\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"comments\">Comments</Label>\n                        <Input type=\"textarea\" name=\"comments\" id=\"comments\" value={item.comments || ''} onChange={this.handleChange} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>\n                        <Button colar=\"secondary\" tag={Link} to=\"/postings/\">Cancel</Button> \n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(PostEdit);"]},"metadata":{},"sourceType":"module"}